#version 330 core 
out vec4 color; 

in vec3 FragPos;
in vec3 Normal;  
in vec2 TexCoords; 

uniform vec3 lightPos; 
uniform vec3 lightColor;
uniform vec3 objectColor;

uniform sampler2D texture_diffuse1;

void main()
{
    float ambientStrength = 0.0f;
    vec3 ambient = ambientStrength * lightColor;
 
    vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(lightPos - FragPos);
    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * lightColor * vec3(texture(texture_diffuse1, TexCoords));

    vec3 result = (ambient + diffuse) * objectColor;
    color = vec4(result, 1.0f);
} 